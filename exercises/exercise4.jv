pipeline temperaturesPipeline {
    temperaturesExtractor
        -> dataFilePicker
        -> dataTextFileInterpreter
        -> dataCSVInterpreter
        -> renameColumn1
        -> renameColumn2
        -> dataTableInterpreter
        -> temperatureTransformer
        -> battery_temperatureTransformer
        -> dataLoader;
        

    block temperaturesExtractor oftype GTFSExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block dataFilePicker oftype FilePicker {
        path: "/data.csv";
    }

  
    // 5. The rest of the pipeline follows the usual pattern.
    block dataTextFileInterpreter oftype TextFileInterpreter { }

    block dataCSVInterpreter oftype CSVInterpreter { 
        delimiter: ";";
        enclosing: '';
    }
   
    block renameColumn1 oftype CellWriter {
        at: range A1:E1;
        write: ["id", "producer", "model", "month", "temperature"];
    }

    block renameColumn2 oftype CellWriter {
        at: cell J1;
        write: ["battery_temperature"];
    }

    constraint RangeConst_1 oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
    }

    valuetype PositiveIntPattern oftype integer {
        constraints: [RangeConst_1,];
    }

    constraint RangeConst_2 oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
        upperBound: 12;
        upperBoundInclusive: true;
    }

    valuetype MonthPattern oftype integer {
        constraints: [RangeConst_2,];
    }

    block temperatureTransformer oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        use: cTOf;
    }

    block battery_temperatureTransformer oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        use: cTOf;
    }

    transform cTOf {
        from c oftype decimal;
        to f oftype decimal;

        f:  (c * 9/5) + 32;
    }

    
    block dataTableInterpreter oftype TableInterpreter {
        header: true;
        columns:[
            "id" oftype PositiveIntPattern,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype MonthPattern,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }

    
    block dataLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }
}